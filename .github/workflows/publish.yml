# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

on:
  release:
    types: [published]

permissions:
  contents: read

jobs:
#  TODO issue #11: deduplicate this, and trigger the test.yml directly
  test:
    name: Test job
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.9", "3.10", "3.11" ]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{matrix.python-version}}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Modify sys.path and export it
        id: modify-sys-path
        run: |
          echo "::set-output name=sys-path::$(realpath .)"
        shell: bash

      # Add your build/test steps here
      - name: Run Tests
        working-directory: test
        run: python test_adb_pywrapper.py
        env:
          PYTHONPATH: ${{ steps.modify-sys-path.outputs.sys-path }}

  publish:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.11'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build
    - name: Build package
      run: python -m build
    - name: Publish package
      uses: pypa/gh-action-pypi-publish@v1.12.4
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}